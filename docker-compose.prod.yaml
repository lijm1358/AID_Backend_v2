# https://velog.io/@rlagurwns112/docker-compose%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-django-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B0%B0%ED%8F%AC
# https://afsdzvcx123.tistory.com/entry/Docker-PostgreSQL-Docker-Compose-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1
# https://meongj-devlog.tistory.com/145 (gunicorn)
# https://node-js.tistory.com/32, https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71 (https)

version: '3.8'

services:
  web-server:
    container_name: nginx
    image: nginx:latest
    restart: always
    environment:
      TZ: "Asia/Seoul"
    volumes:
      - ./config/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    networks:
      - aid
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot:latest
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${CERT_EMAIL} --agree-tos --no-eff-email -d pnuaid.com
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/logs:/var/log/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  server:
    container_name: DjangoApp
    depends_on:
      - db
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./aid_web:/aid_web
    command: sh -c "cd /aid_web && python manage.py makemigrations && python manage.py migrate && gunicorn config.wsgi:application --bind 0.0.0.0:8000 --timeout 90 --reload"
    ports:
      - 8000:8000
    environment:
      TZ: "Asia/Seoul"
      DJANGO_SETTINGS_MODULE: config.settings.prod
    networks:
      - aid

  db:
    container_name: db
    image: postgres:16-alpine # 효율성을 위해 alpine linux 사용, postgresql은 16.1이 latest
    restart: always
    volumes:
      - data-vol:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - 5432:5432
    env_file:
      - ./env/.db.env
    networks:
      - aid

networks:
  aid:
    driver: bridge

volumes:
  data-vol:
    driver: local
