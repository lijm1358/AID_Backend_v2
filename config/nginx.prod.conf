# TODO: https 연결
user www-data;

worker_processes auto; # nginx 프로세스 실행 가능 수 (실질적 웹서버) : 보통 auto 사용

events { # 비동기 이벤트 방식 처리에 대한 옵션
  worker_connections 1024; # 하나의 프로세스가 처리할 수 있는 연결 수
  accept_mutex off;
  use epoll;
}
# worker_proccesses x worker_connection = 최대 접속자 수

http {
    client_max_body_size 5M;

    include mime.types;

    # rewrite
    # return(redirect)

    upstream app_serve {
        server DjangoApp:8000;
    }

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    server {
        listen 80;
        # server_name localhost;

        server_name pnuaid.com;
        # redirect

        location / {
            return 301 https://$host$request_uri;
        }

        location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/certbot;
        }

    }

    server {
        listen 443 ssl;
        server_name pnuaid.com;
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/pnuaid.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/pnuaid.com/privkey.pem;

        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location /admin {
            proxy_pass http://app_serve;
            # 외부에서 헤더보고 자동으로 지정되는 값
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        }

        location /api {
            proxy_pass http://app_serve;
            # 외부에서 헤더보고 자동으로 지정되는 값
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        }
    }
}
